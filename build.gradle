buildscript {
    ext.kotlin_version = '1.2.60'
    ext.pg_driver_version = '42.2.4'

    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'nu.studer:gradle-jooq-plugin:3.0.1'
    }
}

group 'tomwamt'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'nu.studer.jooq'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.discord4j:Discord4J:2.10.1"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile 'org.jooq:jooq:3.11.4'
    compile "org.postgresql:postgresql:$pg_driver_version"
    jooqRuntime "org.postgresql:postgresql:$pg_driver_version"
    compile 'com.zaxxer:HikariCP:3.2.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.jvmTarget = "1.8"
}

mainClassName = "bravebot.MainKt"
run {
    args = ["token.txt"]
}

jooq {
    postgres(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/bravebot'
            user = 'bravebot'
            password = 'brave'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
                includes = "poll|poll_vote"
            }
            generate {
                relations = true
                deprecated = false
                records = true
                //immutablePojos = true
                fluentSetters = false
            }
            target {
                packageName = 'bravebot.db.jooq'
            }
        }
    }
}

compileKotlin.dependsOn(generatePostgresJooqSchemaSource)

project(':dbmigrate') {
    apply plugin: 'kotlin'
    apply plugin: 'application'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.postgresql:postgresql:$pg_driver_version"
        compile "org.flywaydb:flyway-core:5.0.3"
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.jvmTarget = "1.8"
    }

    mainClassName = "bravebot.db.migrate.MigrateKt"
}
